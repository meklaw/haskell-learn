module OperatorDemo where

-- выхов функции
-- max 6 10

-- вызов оператора
-- 6 + 10

-- вызов функции в операторном стиле 
-- 6 `max` 10

-- оператор в функциональном стиле 
-- (+) 6 10

-- все операторы в хаскеле бинарные (принимают 2 значения)
-- исключение: унарный минус - 7, отрицательные числа нужно заключать в сколбки max 10 (-3)
-- (-) 10 4 == 6

-- операторы имеют приоритет
-- 3 + 5 * 8 = 43
-- функции имеют наивысший приоритет (10)
-- max 10 5 * 3 = 30

-- операторы имеют разную ассоциативность 
-- 3 - 9 - 5 = -11
-- (3 - 9) - 5 = -11 -- левоасоциативно
-- 3 - (9 - 5) = -1 -- правоасоциативно

-- для задачи ассоциативности пишется 
-- infix - для задачи отсутствия ассоциативности, значит что нельзя строить цепочки значений с ассоциативными операторами
-- infixl - для левоасоциативности
-- infixr - для правоасоциативности
-- infixl {приоритет оператора} {название оператора}

-- из стандартной библиотеки
-- infixr 8 ^, `logBase`
-- infixl 7 *, /, `div`, `mod`
-- infixl 6 +, -
-- infix 4 ==, /=, >, >=, <, <=

-- операторы можно составлять из следующих символов
-- ! # $ & * + . / < = > ? @ \ | ^ - ~ :
-- двоеточие можно исспользовать, но он если в конце, то он используется в инфиксных конструкторах данных 
-- если он в середине, то можно использовать без проблем

-- определение оператора в операторном стиле
infixl 6 *+* 

a *+* b = a ^ 2 + b ^ 2
-- (*+*) a b = a ^ 2 + b ^ 2 -- так тоже можно

-- частичное выполнение оператора к одному из своих аргументов 
-- (/) 2 == (2 /) -- сечение оператора, функция одной переменной
-- можно связать не только левый аргумент, но и правый аргумент оператора
-- (/ 2) -- функция делить на два
-- у минуса нет оператора сечения с правым аргументом, так как это унарный минус
-- (- 2) вернёт -2

-- f $ x = f x
-- sin 0 == sin $ 0
-- данный оператор $ имеет самый низкий приоритет (0) и правую ассоциативность
-- позволяет избавиться от излишних скобок
-- sin (pi / 2) == 1.0
-- sin $ pi / 2 == 1.0
-- max 10 $ 5 + 100 = 105
-- max 10 (5 + 100) = 105
-- f (g x (h y)) == f $ g x (h y) == f $ g x $ h y